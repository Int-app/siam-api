package jp.co.siam.restapi.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class InsurancecompanyExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table M_InsuranceCompany
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table M_InsuranceCompany
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table M_InsuranceCompany
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table M_InsuranceCompany
     *
     * @mbg.generated
     */
    public InsurancecompanyExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table M_InsuranceCompany
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table M_InsuranceCompany
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table M_InsuranceCompany
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table M_InsuranceCompany
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table M_InsuranceCompany
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table M_InsuranceCompany
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table M_InsuranceCompany
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table M_InsuranceCompany
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table M_InsuranceCompany
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table M_InsuranceCompany
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table M_InsuranceCompany
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andInsuranceCompanyIdIsNull() {
            addCriterion("InsuranceCompanyId is null");
            return (Criteria) this;
        }

        public Criteria andInsuranceCompanyIdIsNotNull() {
            addCriterion("InsuranceCompanyId is not null");
            return (Criteria) this;
        }

        public Criteria andInsuranceCompanyIdEqualTo(String value) {
            addCriterion("InsuranceCompanyId =", value, "insuranceCompanyId");
            return (Criteria) this;
        }

        public Criteria andInsuranceCompanyIdNotEqualTo(String value) {
            addCriterion("InsuranceCompanyId <>", value, "insuranceCompanyId");
            return (Criteria) this;
        }

        public Criteria andInsuranceCompanyIdGreaterThan(String value) {
            addCriterion("InsuranceCompanyId >", value, "insuranceCompanyId");
            return (Criteria) this;
        }

        public Criteria andInsuranceCompanyIdGreaterThanOrEqualTo(String value) {
            addCriterion("InsuranceCompanyId >=", value, "insuranceCompanyId");
            return (Criteria) this;
        }

        public Criteria andInsuranceCompanyIdLessThan(String value) {
            addCriterion("InsuranceCompanyId <", value, "insuranceCompanyId");
            return (Criteria) this;
        }

        public Criteria andInsuranceCompanyIdLessThanOrEqualTo(String value) {
            addCriterion("InsuranceCompanyId <=", value, "insuranceCompanyId");
            return (Criteria) this;
        }

        public Criteria andInsuranceCompanyIdLike(String value) {
            addCriterion("InsuranceCompanyId like", value, "insuranceCompanyId");
            return (Criteria) this;
        }

        public Criteria andInsuranceCompanyIdNotLike(String value) {
            addCriterion("InsuranceCompanyId not like", value, "insuranceCompanyId");
            return (Criteria) this;
        }

        public Criteria andInsuranceCompanyIdIn(List<String> values) {
            addCriterion("InsuranceCompanyId in", values, "insuranceCompanyId");
            return (Criteria) this;
        }

        public Criteria andInsuranceCompanyIdNotIn(List<String> values) {
            addCriterion("InsuranceCompanyId not in", values, "insuranceCompanyId");
            return (Criteria) this;
        }

        public Criteria andInsuranceCompanyIdBetween(String value1, String value2) {
            addCriterion("InsuranceCompanyId between", value1, value2, "insuranceCompanyId");
            return (Criteria) this;
        }

        public Criteria andInsuranceCompanyIdNotBetween(String value1, String value2) {
            addCriterion("InsuranceCompanyId not between", value1, value2, "insuranceCompanyId");
            return (Criteria) this;
        }

        public Criteria andInsuranceCompanyNameIsNull() {
            addCriterion("InsuranceCompanyName is null");
            return (Criteria) this;
        }

        public Criteria andInsuranceCompanyNameIsNotNull() {
            addCriterion("InsuranceCompanyName is not null");
            return (Criteria) this;
        }

        public Criteria andInsuranceCompanyNameEqualTo(String value) {
            addCriterion("InsuranceCompanyName =", value, "insuranceCompanyName");
            return (Criteria) this;
        }

        public Criteria andInsuranceCompanyNameNotEqualTo(String value) {
            addCriterion("InsuranceCompanyName <>", value, "insuranceCompanyName");
            return (Criteria) this;
        }

        public Criteria andInsuranceCompanyNameGreaterThan(String value) {
            addCriterion("InsuranceCompanyName >", value, "insuranceCompanyName");
            return (Criteria) this;
        }

        public Criteria andInsuranceCompanyNameGreaterThanOrEqualTo(String value) {
            addCriterion("InsuranceCompanyName >=", value, "insuranceCompanyName");
            return (Criteria) this;
        }

        public Criteria andInsuranceCompanyNameLessThan(String value) {
            addCriterion("InsuranceCompanyName <", value, "insuranceCompanyName");
            return (Criteria) this;
        }

        public Criteria andInsuranceCompanyNameLessThanOrEqualTo(String value) {
            addCriterion("InsuranceCompanyName <=", value, "insuranceCompanyName");
            return (Criteria) this;
        }

        public Criteria andInsuranceCompanyNameLike(String value) {
            addCriterion("InsuranceCompanyName like", value, "insuranceCompanyName");
            return (Criteria) this;
        }

        public Criteria andInsuranceCompanyNameNotLike(String value) {
            addCriterion("InsuranceCompanyName not like", value, "insuranceCompanyName");
            return (Criteria) this;
        }

        public Criteria andInsuranceCompanyNameIn(List<String> values) {
            addCriterion("InsuranceCompanyName in", values, "insuranceCompanyName");
            return (Criteria) this;
        }

        public Criteria andInsuranceCompanyNameNotIn(List<String> values) {
            addCriterion("InsuranceCompanyName not in", values, "insuranceCompanyName");
            return (Criteria) this;
        }

        public Criteria andInsuranceCompanyNameBetween(String value1, String value2) {
            addCriterion("InsuranceCompanyName between", value1, value2, "insuranceCompanyName");
            return (Criteria) this;
        }

        public Criteria andInsuranceCompanyNameNotBetween(String value1, String value2) {
            addCriterion("InsuranceCompanyName not between", value1, value2, "insuranceCompanyName");
            return (Criteria) this;
        }

        public Criteria andAddressPostCodeIsNull() {
            addCriterion("AddressPostCode is null");
            return (Criteria) this;
        }

        public Criteria andAddressPostCodeIsNotNull() {
            addCriterion("AddressPostCode is not null");
            return (Criteria) this;
        }

        public Criteria andAddressPostCodeEqualTo(String value) {
            addCriterion("AddressPostCode =", value, "addressPostCode");
            return (Criteria) this;
        }

        public Criteria andAddressPostCodeNotEqualTo(String value) {
            addCriterion("AddressPostCode <>", value, "addressPostCode");
            return (Criteria) this;
        }

        public Criteria andAddressPostCodeGreaterThan(String value) {
            addCriterion("AddressPostCode >", value, "addressPostCode");
            return (Criteria) this;
        }

        public Criteria andAddressPostCodeGreaterThanOrEqualTo(String value) {
            addCriterion("AddressPostCode >=", value, "addressPostCode");
            return (Criteria) this;
        }

        public Criteria andAddressPostCodeLessThan(String value) {
            addCriterion("AddressPostCode <", value, "addressPostCode");
            return (Criteria) this;
        }

        public Criteria andAddressPostCodeLessThanOrEqualTo(String value) {
            addCriterion("AddressPostCode <=", value, "addressPostCode");
            return (Criteria) this;
        }

        public Criteria andAddressPostCodeLike(String value) {
            addCriterion("AddressPostCode like", value, "addressPostCode");
            return (Criteria) this;
        }

        public Criteria andAddressPostCodeNotLike(String value) {
            addCriterion("AddressPostCode not like", value, "addressPostCode");
            return (Criteria) this;
        }

        public Criteria andAddressPostCodeIn(List<String> values) {
            addCriterion("AddressPostCode in", values, "addressPostCode");
            return (Criteria) this;
        }

        public Criteria andAddressPostCodeNotIn(List<String> values) {
            addCriterion("AddressPostCode not in", values, "addressPostCode");
            return (Criteria) this;
        }

        public Criteria andAddressPostCodeBetween(String value1, String value2) {
            addCriterion("AddressPostCode between", value1, value2, "addressPostCode");
            return (Criteria) this;
        }

        public Criteria andAddressPostCodeNotBetween(String value1, String value2) {
            addCriterion("AddressPostCode not between", value1, value2, "addressPostCode");
            return (Criteria) this;
        }

        public Criteria andAddressPrefectureIsNull() {
            addCriterion("AddressPrefecture is null");
            return (Criteria) this;
        }

        public Criteria andAddressPrefectureIsNotNull() {
            addCriterion("AddressPrefecture is not null");
            return (Criteria) this;
        }

        public Criteria andAddressPrefectureEqualTo(String value) {
            addCriterion("AddressPrefecture =", value, "addressPrefecture");
            return (Criteria) this;
        }

        public Criteria andAddressPrefectureNotEqualTo(String value) {
            addCriterion("AddressPrefecture <>", value, "addressPrefecture");
            return (Criteria) this;
        }

        public Criteria andAddressPrefectureGreaterThan(String value) {
            addCriterion("AddressPrefecture >", value, "addressPrefecture");
            return (Criteria) this;
        }

        public Criteria andAddressPrefectureGreaterThanOrEqualTo(String value) {
            addCriterion("AddressPrefecture >=", value, "addressPrefecture");
            return (Criteria) this;
        }

        public Criteria andAddressPrefectureLessThan(String value) {
            addCriterion("AddressPrefecture <", value, "addressPrefecture");
            return (Criteria) this;
        }

        public Criteria andAddressPrefectureLessThanOrEqualTo(String value) {
            addCriterion("AddressPrefecture <=", value, "addressPrefecture");
            return (Criteria) this;
        }

        public Criteria andAddressPrefectureLike(String value) {
            addCriterion("AddressPrefecture like", value, "addressPrefecture");
            return (Criteria) this;
        }

        public Criteria andAddressPrefectureNotLike(String value) {
            addCriterion("AddressPrefecture not like", value, "addressPrefecture");
            return (Criteria) this;
        }

        public Criteria andAddressPrefectureIn(List<String> values) {
            addCriterion("AddressPrefecture in", values, "addressPrefecture");
            return (Criteria) this;
        }

        public Criteria andAddressPrefectureNotIn(List<String> values) {
            addCriterion("AddressPrefecture not in", values, "addressPrefecture");
            return (Criteria) this;
        }

        public Criteria andAddressPrefectureBetween(String value1, String value2) {
            addCriterion("AddressPrefecture between", value1, value2, "addressPrefecture");
            return (Criteria) this;
        }

        public Criteria andAddressPrefectureNotBetween(String value1, String value2) {
            addCriterion("AddressPrefecture not between", value1, value2, "addressPrefecture");
            return (Criteria) this;
        }

        public Criteria andAddressMunicipalitiesIsNull() {
            addCriterion("AddressMunicipalities is null");
            return (Criteria) this;
        }

        public Criteria andAddressMunicipalitiesIsNotNull() {
            addCriterion("AddressMunicipalities is not null");
            return (Criteria) this;
        }

        public Criteria andAddressMunicipalitiesEqualTo(String value) {
            addCriterion("AddressMunicipalities =", value, "addressMunicipalities");
            return (Criteria) this;
        }

        public Criteria andAddressMunicipalitiesNotEqualTo(String value) {
            addCriterion("AddressMunicipalities <>", value, "addressMunicipalities");
            return (Criteria) this;
        }

        public Criteria andAddressMunicipalitiesGreaterThan(String value) {
            addCriterion("AddressMunicipalities >", value, "addressMunicipalities");
            return (Criteria) this;
        }

        public Criteria andAddressMunicipalitiesGreaterThanOrEqualTo(String value) {
            addCriterion("AddressMunicipalities >=", value, "addressMunicipalities");
            return (Criteria) this;
        }

        public Criteria andAddressMunicipalitiesLessThan(String value) {
            addCriterion("AddressMunicipalities <", value, "addressMunicipalities");
            return (Criteria) this;
        }

        public Criteria andAddressMunicipalitiesLessThanOrEqualTo(String value) {
            addCriterion("AddressMunicipalities <=", value, "addressMunicipalities");
            return (Criteria) this;
        }

        public Criteria andAddressMunicipalitiesLike(String value) {
            addCriterion("AddressMunicipalities like", value, "addressMunicipalities");
            return (Criteria) this;
        }

        public Criteria andAddressMunicipalitiesNotLike(String value) {
            addCriterion("AddressMunicipalities not like", value, "addressMunicipalities");
            return (Criteria) this;
        }

        public Criteria andAddressMunicipalitiesIn(List<String> values) {
            addCriterion("AddressMunicipalities in", values, "addressMunicipalities");
            return (Criteria) this;
        }

        public Criteria andAddressMunicipalitiesNotIn(List<String> values) {
            addCriterion("AddressMunicipalities not in", values, "addressMunicipalities");
            return (Criteria) this;
        }

        public Criteria andAddressMunicipalitiesBetween(String value1, String value2) {
            addCriterion("AddressMunicipalities between", value1, value2, "addressMunicipalities");
            return (Criteria) this;
        }

        public Criteria andAddressMunicipalitiesNotBetween(String value1, String value2) {
            addCriterion("AddressMunicipalities not between", value1, value2, "addressMunicipalities");
            return (Criteria) this;
        }

        public Criteria andAddressOtherIsNull() {
            addCriterion("AddressOther is null");
            return (Criteria) this;
        }

        public Criteria andAddressOtherIsNotNull() {
            addCriterion("AddressOther is not null");
            return (Criteria) this;
        }

        public Criteria andAddressOtherEqualTo(String value) {
            addCriterion("AddressOther =", value, "addressOther");
            return (Criteria) this;
        }

        public Criteria andAddressOtherNotEqualTo(String value) {
            addCriterion("AddressOther <>", value, "addressOther");
            return (Criteria) this;
        }

        public Criteria andAddressOtherGreaterThan(String value) {
            addCriterion("AddressOther >", value, "addressOther");
            return (Criteria) this;
        }

        public Criteria andAddressOtherGreaterThanOrEqualTo(String value) {
            addCriterion("AddressOther >=", value, "addressOther");
            return (Criteria) this;
        }

        public Criteria andAddressOtherLessThan(String value) {
            addCriterion("AddressOther <", value, "addressOther");
            return (Criteria) this;
        }

        public Criteria andAddressOtherLessThanOrEqualTo(String value) {
            addCriterion("AddressOther <=", value, "addressOther");
            return (Criteria) this;
        }

        public Criteria andAddressOtherLike(String value) {
            addCriterion("AddressOther like", value, "addressOther");
            return (Criteria) this;
        }

        public Criteria andAddressOtherNotLike(String value) {
            addCriterion("AddressOther not like", value, "addressOther");
            return (Criteria) this;
        }

        public Criteria andAddressOtherIn(List<String> values) {
            addCriterion("AddressOther in", values, "addressOther");
            return (Criteria) this;
        }

        public Criteria andAddressOtherNotIn(List<String> values) {
            addCriterion("AddressOther not in", values, "addressOther");
            return (Criteria) this;
        }

        public Criteria andAddressOtherBetween(String value1, String value2) {
            addCriterion("AddressOther between", value1, value2, "addressOther");
            return (Criteria) this;
        }

        public Criteria andAddressOtherNotBetween(String value1, String value2) {
            addCriterion("AddressOther not between", value1, value2, "addressOther");
            return (Criteria) this;
        }

        public Criteria andInChargeIdIsNull() {
            addCriterion("InChargeId is null");
            return (Criteria) this;
        }

        public Criteria andInChargeIdIsNotNull() {
            addCriterion("InChargeId is not null");
            return (Criteria) this;
        }

        public Criteria andInChargeIdEqualTo(Integer value) {
            addCriterion("InChargeId =", value, "inChargeId");
            return (Criteria) this;
        }

        public Criteria andInChargeIdNotEqualTo(Integer value) {
            addCriterion("InChargeId <>", value, "inChargeId");
            return (Criteria) this;
        }

        public Criteria andInChargeIdGreaterThan(Integer value) {
            addCriterion("InChargeId >", value, "inChargeId");
            return (Criteria) this;
        }

        public Criteria andInChargeIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("InChargeId >=", value, "inChargeId");
            return (Criteria) this;
        }

        public Criteria andInChargeIdLessThan(Integer value) {
            addCriterion("InChargeId <", value, "inChargeId");
            return (Criteria) this;
        }

        public Criteria andInChargeIdLessThanOrEqualTo(Integer value) {
            addCriterion("InChargeId <=", value, "inChargeId");
            return (Criteria) this;
        }

        public Criteria andInChargeIdIn(List<Integer> values) {
            addCriterion("InChargeId in", values, "inChargeId");
            return (Criteria) this;
        }

        public Criteria andInChargeIdNotIn(List<Integer> values) {
            addCriterion("InChargeId not in", values, "inChargeId");
            return (Criteria) this;
        }

        public Criteria andInChargeIdBetween(Integer value1, Integer value2) {
            addCriterion("InChargeId between", value1, value2, "inChargeId");
            return (Criteria) this;
        }

        public Criteria andInChargeIdNotBetween(Integer value1, Integer value2) {
            addCriterion("InChargeId not between", value1, value2, "inChargeId");
            return (Criteria) this;
        }

        public Criteria andRemarksIsNull() {
            addCriterion("Remarks is null");
            return (Criteria) this;
        }

        public Criteria andRemarksIsNotNull() {
            addCriterion("Remarks is not null");
            return (Criteria) this;
        }

        public Criteria andRemarksEqualTo(String value) {
            addCriterion("Remarks =", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksNotEqualTo(String value) {
            addCriterion("Remarks <>", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksGreaterThan(String value) {
            addCriterion("Remarks >", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksGreaterThanOrEqualTo(String value) {
            addCriterion("Remarks >=", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksLessThan(String value) {
            addCriterion("Remarks <", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksLessThanOrEqualTo(String value) {
            addCriterion("Remarks <=", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksLike(String value) {
            addCriterion("Remarks like", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksNotLike(String value) {
            addCriterion("Remarks not like", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksIn(List<String> values) {
            addCriterion("Remarks in", values, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksNotIn(List<String> values) {
            addCriterion("Remarks not in", values, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksBetween(String value1, String value2) {
            addCriterion("Remarks between", value1, value2, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksNotBetween(String value1, String value2) {
            addCriterion("Remarks not between", value1, value2, "remarks");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagIsNull() {
            addCriterion("DeleteFlag is null");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagIsNotNull() {
            addCriterion("DeleteFlag is not null");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagEqualTo(Integer value) {
            addCriterion("DeleteFlag =", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagNotEqualTo(Integer value) {
            addCriterion("DeleteFlag <>", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagGreaterThan(Integer value) {
            addCriterion("DeleteFlag >", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagGreaterThanOrEqualTo(Integer value) {
            addCriterion("DeleteFlag >=", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagLessThan(Integer value) {
            addCriterion("DeleteFlag <", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagLessThanOrEqualTo(Integer value) {
            addCriterion("DeleteFlag <=", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagIn(List<Integer> values) {
            addCriterion("DeleteFlag in", values, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagNotIn(List<Integer> values) {
            addCriterion("DeleteFlag not in", values, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagBetween(Integer value1, Integer value2) {
            addCriterion("DeleteFlag between", value1, value2, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagNotBetween(Integer value1, Integer value2) {
            addCriterion("DeleteFlag not between", value1, value2, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andCreatedByIsNull() {
            addCriterion("CreatedBy is null");
            return (Criteria) this;
        }

        public Criteria andCreatedByIsNotNull() {
            addCriterion("CreatedBy is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedByEqualTo(String value) {
            addCriterion("CreatedBy =", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByNotEqualTo(String value) {
            addCriterion("CreatedBy <>", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByGreaterThan(String value) {
            addCriterion("CreatedBy >", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByGreaterThanOrEqualTo(String value) {
            addCriterion("CreatedBy >=", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByLessThan(String value) {
            addCriterion("CreatedBy <", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByLessThanOrEqualTo(String value) {
            addCriterion("CreatedBy <=", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByLike(String value) {
            addCriterion("CreatedBy like", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByNotLike(String value) {
            addCriterion("CreatedBy not like", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByIn(List<String> values) {
            addCriterion("CreatedBy in", values, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByNotIn(List<String> values) {
            addCriterion("CreatedBy not in", values, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByBetween(String value1, String value2) {
            addCriterion("CreatedBy between", value1, value2, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByNotBetween(String value1, String value2) {
            addCriterion("CreatedBy not between", value1, value2, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedDateIsNull() {
            addCriterion("CreatedDate is null");
            return (Criteria) this;
        }

        public Criteria andCreatedDateIsNotNull() {
            addCriterion("CreatedDate is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedDateEqualTo(Date value) {
            addCriterionForJDBCDate("CreatedDate =", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("CreatedDate <>", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateGreaterThan(Date value) {
            addCriterionForJDBCDate("CreatedDate >", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CreatedDate >=", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateLessThan(Date value) {
            addCriterionForJDBCDate("CreatedDate <", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CreatedDate <=", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateIn(List<Date> values) {
            addCriterionForJDBCDate("CreatedDate in", values, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("CreatedDate not in", values, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CreatedDate between", value1, value2, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CreatedDate not between", value1, value2, "createdDate");
            return (Criteria) this;
        }

        public Criteria andUpdatedByIsNull() {
            addCriterion("UpdatedBy is null");
            return (Criteria) this;
        }

        public Criteria andUpdatedByIsNotNull() {
            addCriterion("UpdatedBy is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatedByEqualTo(String value) {
            addCriterion("UpdatedBy =", value, "updatedBy");
            return (Criteria) this;
        }

        public Criteria andUpdatedByNotEqualTo(String value) {
            addCriterion("UpdatedBy <>", value, "updatedBy");
            return (Criteria) this;
        }

        public Criteria andUpdatedByGreaterThan(String value) {
            addCriterion("UpdatedBy >", value, "updatedBy");
            return (Criteria) this;
        }

        public Criteria andUpdatedByGreaterThanOrEqualTo(String value) {
            addCriterion("UpdatedBy >=", value, "updatedBy");
            return (Criteria) this;
        }

        public Criteria andUpdatedByLessThan(String value) {
            addCriterion("UpdatedBy <", value, "updatedBy");
            return (Criteria) this;
        }

        public Criteria andUpdatedByLessThanOrEqualTo(String value) {
            addCriterion("UpdatedBy <=", value, "updatedBy");
            return (Criteria) this;
        }

        public Criteria andUpdatedByLike(String value) {
            addCriterion("UpdatedBy like", value, "updatedBy");
            return (Criteria) this;
        }

        public Criteria andUpdatedByNotLike(String value) {
            addCriterion("UpdatedBy not like", value, "updatedBy");
            return (Criteria) this;
        }

        public Criteria andUpdatedByIn(List<String> values) {
            addCriterion("UpdatedBy in", values, "updatedBy");
            return (Criteria) this;
        }

        public Criteria andUpdatedByNotIn(List<String> values) {
            addCriterion("UpdatedBy not in", values, "updatedBy");
            return (Criteria) this;
        }

        public Criteria andUpdatedByBetween(String value1, String value2) {
            addCriterion("UpdatedBy between", value1, value2, "updatedBy");
            return (Criteria) this;
        }

        public Criteria andUpdatedByNotBetween(String value1, String value2) {
            addCriterion("UpdatedBy not between", value1, value2, "updatedBy");
            return (Criteria) this;
        }

        public Criteria andUpdatedDateIsNull() {
            addCriterion("UpdatedDate is null");
            return (Criteria) this;
        }

        public Criteria andUpdatedDateIsNotNull() {
            addCriterion("UpdatedDate is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatedDateEqualTo(Date value) {
            addCriterionForJDBCDate("UpdatedDate =", value, "updatedDate");
            return (Criteria) this;
        }

        public Criteria andUpdatedDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("UpdatedDate <>", value, "updatedDate");
            return (Criteria) this;
        }

        public Criteria andUpdatedDateGreaterThan(Date value) {
            addCriterionForJDBCDate("UpdatedDate >", value, "updatedDate");
            return (Criteria) this;
        }

        public Criteria andUpdatedDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("UpdatedDate >=", value, "updatedDate");
            return (Criteria) this;
        }

        public Criteria andUpdatedDateLessThan(Date value) {
            addCriterionForJDBCDate("UpdatedDate <", value, "updatedDate");
            return (Criteria) this;
        }

        public Criteria andUpdatedDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("UpdatedDate <=", value, "updatedDate");
            return (Criteria) this;
        }

        public Criteria andUpdatedDateIn(List<Date> values) {
            addCriterionForJDBCDate("UpdatedDate in", values, "updatedDate");
            return (Criteria) this;
        }

        public Criteria andUpdatedDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("UpdatedDate not in", values, "updatedDate");
            return (Criteria) this;
        }

        public Criteria andUpdatedDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("UpdatedDate between", value1, value2, "updatedDate");
            return (Criteria) this;
        }

        public Criteria andUpdatedDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("UpdatedDate not between", value1, value2, "updatedDate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table M_InsuranceCompany
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table M_InsuranceCompany
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}