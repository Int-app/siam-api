<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.co.siam.restapi.dao.InsurancecontractinfoMapper">
  <resultMap id="BaseResultMap" type="jp.co.siam.restapi.entity.Insurancecontractinfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="InsuranceContractId" jdbcType="INTEGER" property="insurancecontractid" />
    <result column="InsuranceCompanyId" jdbcType="CHAR" property="insurancecompanyid" />
    <result column="InsuranceProductId" jdbcType="INTEGER" property="insuranceproductid" />
    <result column="InsurancePapersNo" jdbcType="VARCHAR" property="insurancepapersno" />
    <result column="ContractorFamilyName" jdbcType="VARCHAR" property="contractorfamilyname" />
    <result column="ContractorGivenName" jdbcType="VARCHAR" property="contractorgivenname" />
    <result column="ContractorFamilyNameK" jdbcType="VARCHAR" property="contractorfamilynamek" />
    <result column="ContractorGivenNameK" jdbcType="VARCHAR" property="contractorgivennamek" />
    <result column="ContractDate" jdbcType="DATE" property="contractdate" />
    <result column="InsuranceStartDate" jdbcType="DATE" property="insurancestartdate" />
    <result column="IsCanceled" jdbcType="INTEGER" property="iscanceled" />
    <result column="CancellationDate" jdbcType="DATE" property="cancellationdate" />
    <result column="InsuranceAmount" jdbcType="INTEGER" property="insuranceamount" />
    <result column="PaymentCycle" jdbcType="INTEGER" property="paymentcycle" />
    <result column="Relationship" jdbcType="INTEGER" property="relationship" />
    <result column="RelationshipOther" jdbcType="VARCHAR" property="relationshipother" />
    <result column="InsuredPersonFamilyName" jdbcType="VARCHAR" property="insuredpersonfamilyname" />
    <result column="InsuredPersonGivenName" jdbcType="VARCHAR" property="insuredpersongivenname" />
    <result column="InsuredPersonFamilyNameK" jdbcType="VARCHAR" property="insuredpersonfamilynamek" />
    <result column="InsuredPersonGivenNameK" jdbcType="VARCHAR" property="insuredpersongivennamek" />
    <result column="Sex" jdbcType="INTEGER" property="sex" />
    <result column="PhoneNumber" jdbcType="VARCHAR" property="phonenumber" />
    <result column="Email" jdbcType="VARCHAR" property="email" />
    <result column="Birthday" jdbcType="DATE" property="birthday" />
    <result column="Age" jdbcType="INTEGER" property="age" />
    <result column="AddressPostCode" jdbcType="CHAR" property="addresspostcode" />
    <result column="AddressPrefecture" jdbcType="VARCHAR" property="addressprefecture" />
    <result column="AddressMunicipalities" jdbcType="VARCHAR" property="addressmunicipalities" />
    <result column="AddressOther" jdbcType="VARCHAR" property="addressother" />
    <result column="Remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="EmployeeId" jdbcType="CHAR" property="employeeid" />
    <result column="TeamEmployeeId" jdbcType="CHAR" property="teamemployeeid" />
    <result column="InitialCommission" jdbcType="INTEGER" property="initialcommission" />
    <result column="PaymentMethod" jdbcType="INTEGER" property="paymentmethod" />
    <result column="PaymentMonths" jdbcType="INTEGER" property="paymentmonths" />
    <result column="TotalAmount" jdbcType="INTEGER" property="totalamount" />
    <result column="PaymentPercentage" jdbcType="REAL" property="paymentpercentage" />
    <result column="DeleteFlag" jdbcType="INTEGER" property="deleteflag" />
    <result column="CreatedBy" jdbcType="CHAR" property="createdby" />
    <result column="CreatedDate" jdbcType="DATE" property="createddate" />
    <result column="UpdatedBy" jdbcType="CHAR" property="updatedby" />
    <result column="UpdatedDate" jdbcType="DATE" property="updateddate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    InsuranceContractId, InsuranceCompanyId, InsuranceProductId, InsurancePapersNo, ContractorFamilyName,
    ContractorGivenName, ContractorFamilyNameK, ContractorGivenNameK, ContractDate, InsuranceStartDate,
    IsCanceled, CancellationDate, InsuranceAmount, PaymentCycle, Relationship, RelationshipOther,
    InsuredPersonFamilyName, InsuredPersonGivenName, InsuredPersonFamilyNameK, InsuredPersonGivenNameK,
    Sex, PhoneNumber, Email, Birthday, Age, AddressPostCode, AddressPrefecture, AddressMunicipalities,
    AddressOther, Remarks, EmployeeId, TeamEmployeeId, InitialCommission, PaymentMethod,
    PaymentMonths, TotalAmount, PaymentPercentage, DeleteFlag, CreatedBy, CreatedDate,
    UpdatedBy, UpdatedDate
  </sql>
  <select id="selectByExample" parameterType="jp.co.siam.restapi.entity.InsurancecontractinfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from T_InsuranceContractInfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByFindParam" parameterType="jp.co.siam.restapi.entity.InsurancecontractinfoFindParam" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from T_InsuranceContractInfo
    where 1=1
    <if test="findParam.insurancecontractnumber!=null">
      and InsuranceContractNumber = #{findParam.insurancecontractnumber}
    </if>
    <if test="findParam.employeeId!=null">
      and EmployeeId = #{findParam.employeeId}
    </if>
    <if test="findParam.employeeName!=null">
      and exists(
      select 1 from M_EmployeeInfo t1
      where t1.EmployeeId = T_InsuranceContractInfo.EmployeeId
      and t1.EmployeeName like concat('%', #{findParam.employeeName}, '%')
      )
    </if>
    <if test="findParam.insuranceCompanyName!=null">
      and exists(
      select 1 from M_InsuranceCompany t2
      where t2.InsuranceCompanyId = T_InsuranceContractInfo.InsuranceCompanyId
      and t2.InsuranceCompanyName like concat('%', #{findParam.insuranceCompanyName}, '%')
      )
    </if>
  </select>

  <delete id="deleteByExample" parameterType="jp.co.siam.restapi.entity.InsurancecontractinfoExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from T_InsuranceContractInfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="jp.co.siam.restapi.entity.Insurancecontractinfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into T_InsuranceContractInfo (InsuranceCompanyId,
      InsuranceProductId, InsurancePapersNo,
      ContractorFamilyName, ContractorGivenName,
      ContractorFamilyNameK, ContractorGivenNameK,
      ContractDate, InsuranceStartDate, IsCanceled,
      CancellationDate, InsuranceAmount, PaymentCycle,
      Relationship, RelationshipOther, InsuredPersonFamilyName,
      InsuredPersonGivenName, InsuredPersonFamilyNameK,
      InsuredPersonGivenNameK, Sex, PhoneNumber,
      Email, Birthday, Age,
      AddressPostCode, AddressPrefecture, AddressMunicipalities,
      AddressOther, Remarks, EmployeeId,
      TeamEmployeeId, InitialCommission, PaymentMethod,
      PaymentMonths, TotalAmount, PaymentPercentage,
      DeleteFlag, CreatedBy, CreatedDate,
      UpdatedBy, UpdatedDate)
    values (jdbcType=INTEGER}, #{insurancecompanyid,jdbcType=CHAR},
      #{insuranceproductid,jdbcType=INTEGER}, #{insurancepapersno,jdbcType=VARCHAR},
      #{contractorfamilyname,jdbcType=VARCHAR}, #{contractorgivenname,jdbcType=VARCHAR},
      #{contractorfamilynamek,jdbcType=VARCHAR}, #{contractorgivennamek,jdbcType=VARCHAR},
      #{contractdate,jdbcType=DATE}, #{insurancestartdate,jdbcType=DATE}, #{iscanceled,jdbcType=INTEGER},
      #{cancellationdate,jdbcType=DATE}, #{insuranceamount,jdbcType=INTEGER}, #{paymentcycle,jdbcType=INTEGER},
      #{relationship,jdbcType=INTEGER}, #{relationshipother,jdbcType=VARCHAR}, #{insuredpersonfamilyname,jdbcType=VARCHAR},
      #{insuredpersongivenname,jdbcType=VARCHAR}, #{insuredpersonfamilynamek,jdbcType=VARCHAR},
      #{insuredpersongivennamek,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{phonenumber,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{age,jdbcType=INTEGER},
      #{addresspostcode,jdbcType=CHAR}, #{addressprefecture,jdbcType=VARCHAR}, #{addressmunicipalities,jdbcType=VARCHAR},
      #{addressother,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, #{employeeid,jdbcType=CHAR},
      #{teamemployeeid,jdbcType=CHAR}, #{initialcommission,jdbcType=INTEGER}, #{paymentmethod,jdbcType=INTEGER},
      #{paymentmonths,jdbcType=INTEGER}, #{totalamount,jdbcType=INTEGER}, #{paymentpercentage,jdbcType=REAL},
      #{deleteflag,jdbcType=INTEGER}, #{createdby,jdbcType=CHAR}, #{createddate,jdbcType=DATE},
      #{updatedby,jdbcType=CHAR}, #{updateddate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="jp.co.siam.restapi.entity.Insurancecontractinfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into T_InsuranceContractInfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="insurancecontractid != null">
        InsuranceContractId,
      </if>
      <if test="insurancecompanyid != null">
        InsuranceCompanyId,
      </if>
      <if test="insuranceproductid != null">
        InsuranceProductId,
      </if>
      <if test="insurancepapersno != null">
        InsurancePapersNo,
      </if>
      <if test="contractorfamilyname != null">
        ContractorFamilyName,
      </if>
      <if test="contractorgivenname != null">
        ContractorGivenName,
      </if>
      <if test="contractorfamilynamek != null">
        ContractorFamilyNameK,
      </if>
      <if test="contractorgivennamek != null">
        ContractorGivenNameK,
      </if>
      <if test="contractdate != null">
        ContractDate,
      </if>
      <if test="insurancestartdate != null">
        InsuranceStartDate,
      </if>
      <if test="iscanceled != null">
        IsCanceled,
      </if>
      <if test="cancellationdate != null">
        CancellationDate,
      </if>
      <if test="insuranceamount != null">
        InsuranceAmount,
      </if>
      <if test="paymentcycle != null">
        PaymentCycle,
      </if>
      <if test="relationship != null">
        Relationship,
      </if>
      <if test="relationshipother != null">
        RelationshipOther,
      </if>
      <if test="insuredpersonfamilyname != null">
        InsuredPersonFamilyName,
      </if>
      <if test="insuredpersongivenname != null">
        InsuredPersonGivenName,
      </if>
      <if test="insuredpersonfamilynamek != null">
        InsuredPersonFamilyNameK,
      </if>
      <if test="insuredpersongivennamek != null">
        InsuredPersonGivenNameK,
      </if>
      <if test="sex != null">
        Sex,
      </if>
      <if test="phonenumber != null">
        PhoneNumber,
      </if>
      <if test="email != null">
        Email,
      </if>
      <if test="birthday != null">
        Birthday,
      </if>
      <if test="age != null">
        Age,
      </if>
      <if test="addresspostcode != null">
        AddressPostCode,
      </if>
      <if test="addressprefecture != null">
        AddressPrefecture,
      </if>
      <if test="addressmunicipalities != null">
        AddressMunicipalities,
      </if>
      <if test="addressother != null">
        AddressOther,
      </if>
      <if test="remarks != null">
        Remarks,
      </if>
      <if test="employeeid != null">
        EmployeeId,
      </if>
      <if test="teamemployeeid != null">
        TeamEmployeeId,
      </if>
      <if test="initialcommission != null">
        InitialCommission,
      </if>
      <if test="paymentmethod != null">
        PaymentMethod,
      </if>
      <if test="paymentmonths != null">
        PaymentMonths,
      </if>
      <if test="totalamount != null">
        TotalAmount,
      </if>
      <if test="paymentpercentage != null">
        PaymentPercentage,
      </if>
      <if test="deleteflag != null">
        DeleteFlag,
      </if>
      <if test="createdby != null">
        CreatedBy,
      </if>
      <if test="createddate != null">
        CreatedDate,
      </if>
      <if test="updatedby != null">
        UpdatedBy,
      </if>
      <if test="updateddate != null">
        UpdatedDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="insurancecontractid != null">
        #{insurancecontractid,jdbcType=INTEGER},
      </if>
      <if test="insurancecompanyid != null">
        #{insurancecompanyid,jdbcType=CHAR},
      </if>
      <if test="insuranceproductid != null">
        #{insuranceproductid,jdbcType=INTEGER},
      </if>
      <if test="insurancepapersno != null">
        #{insurancepapersno,jdbcType=VARCHAR},
      </if>
      <if test="contractorfamilyname != null">
        #{contractorfamilyname,jdbcType=VARCHAR},
      </if>
      <if test="contractorgivenname != null">
        #{contractorgivenname,jdbcType=VARCHAR},
      </if>
      <if test="contractorfamilynamek != null">
        #{contractorfamilynamek,jdbcType=VARCHAR},
      </if>
      <if test="contractorgivennamek != null">
        #{contractorgivennamek,jdbcType=VARCHAR},
      </if>
      <if test="contractdate != null">
        #{contractdate,jdbcType=DATE},
      </if>
      <if test="insurancestartdate != null">
        #{insurancestartdate,jdbcType=DATE},
      </if>
      <if test="iscanceled != null">
        #{iscanceled,jdbcType=INTEGER},
      </if>
      <if test="cancellationdate != null">
        #{cancellationdate,jdbcType=DATE},
      </if>
      <if test="insuranceamount != null">
        #{insuranceamount,jdbcType=INTEGER},
      </if>
      <if test="paymentcycle != null">
        #{paymentcycle,jdbcType=INTEGER},
      </if>
      <if test="relationship != null">
        #{relationship,jdbcType=INTEGER},
      </if>
      <if test="relationshipother != null">
        #{relationshipother,jdbcType=VARCHAR},
      </if>
      <if test="insuredpersonfamilyname != null">
        #{insuredpersonfamilyname,jdbcType=VARCHAR},
      </if>
      <if test="insuredpersongivenname != null">
        #{insuredpersongivenname,jdbcType=VARCHAR},
      </if>
      <if test="insuredpersonfamilynamek != null">
        #{insuredpersonfamilynamek,jdbcType=VARCHAR},
      </if>
      <if test="insuredpersongivennamek != null">
        #{insuredpersongivennamek,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="phonenumber != null">
        #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="addresspostcode != null">
        #{addresspostcode,jdbcType=CHAR},
      </if>
      <if test="addressprefecture != null">
        #{addressprefecture,jdbcType=VARCHAR},
      </if>
      <if test="addressmunicipalities != null">
        #{addressmunicipalities,jdbcType=VARCHAR},
      </if>
      <if test="addressother != null">
        #{addressother,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="employeeid != null">
        #{employeeid,jdbcType=CHAR},
      </if>
      <if test="teamemployeeid != null">
        #{teamemployeeid,jdbcType=CHAR},
      </if>
      <if test="initialcommission != null">
        #{initialcommission,jdbcType=INTEGER},
      </if>
      <if test="paymentmethod != null">
        #{paymentmethod,jdbcType=INTEGER},
      </if>
      <if test="paymentmonths != null">
        #{paymentmonths,jdbcType=INTEGER},
      </if>
      <if test="totalamount != null">
        #{totalamount,jdbcType=INTEGER},
      </if>
      <if test="paymentpercentage != null">
        #{paymentpercentage,jdbcType=REAL},
      </if>
      <if test="deleteflag != null">
        #{deleteflag,jdbcType=INTEGER},
      </if>
      <if test="createdby != null">
        #{createdby,jdbcType=CHAR},
      </if>
      <if test="createddate != null">
        #{createddate,jdbcType=DATE},
      </if>
      <if test="updatedby != null">
        #{updatedby,jdbcType=CHAR},
      </if>
      <if test="updateddate != null">
        #{updateddate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="jp.co.siam.restapi.entity.InsurancecontractinfoExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from T_InsuranceContractInfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update T_InsuranceContractInfo
    <set>
      <if test="record.insurancecontractid != null">
        InsuranceContractId = #{record.insurancecontractid,jdbcType=INTEGER},
      </if>
      <if test="record.insurancecompanyid != null">
        InsuranceCompanyId = #{record.insurancecompanyid,jdbcType=CHAR},
      </if>
      <if test="record.insuranceproductid != null">
        InsuranceProductId = #{record.insuranceproductid,jdbcType=INTEGER},
      </if>
      <if test="record.insurancepapersno != null">
        InsurancePapersNo = #{record.insurancepapersno,jdbcType=VARCHAR},
      </if>
      <if test="record.contractorfamilyname != null">
        ContractorFamilyName = #{record.contractorfamilyname,jdbcType=VARCHAR},
      </if>
      <if test="record.contractorgivenname != null">
        ContractorGivenName = #{record.contractorgivenname,jdbcType=VARCHAR},
      </if>
      <if test="record.contractorfamilynamek != null">
        ContractorFamilyNameK = #{record.contractorfamilynamek,jdbcType=VARCHAR},
      </if>
      <if test="record.contractorgivennamek != null">
        ContractorGivenNameK = #{record.contractorgivennamek,jdbcType=VARCHAR},
      </if>
      <if test="record.contractdate != null">
        ContractDate = #{record.contractdate,jdbcType=DATE},
      </if>
      <if test="record.insurancestartdate != null">
        InsuranceStartDate = #{record.insurancestartdate,jdbcType=DATE},
      </if>
      <if test="record.iscanceled != null">
        IsCanceled = #{record.iscanceled,jdbcType=INTEGER},
      </if>
      <if test="record.cancellationdate != null">
        CancellationDate = #{record.cancellationdate,jdbcType=DATE},
      </if>
      <if test="record.insuranceamount != null">
        InsuranceAmount = #{record.insuranceamount,jdbcType=INTEGER},
      </if>
      <if test="record.paymentcycle != null">
        PaymentCycle = #{record.paymentcycle,jdbcType=INTEGER},
      </if>
      <if test="record.relationship != null">
        Relationship = #{record.relationship,jdbcType=INTEGER},
      </if>
      <if test="record.relationshipother != null">
        RelationshipOther = #{record.relationshipother,jdbcType=VARCHAR},
      </if>
      <if test="record.insuredpersonfamilyname != null">
        InsuredPersonFamilyName = #{record.insuredpersonfamilyname,jdbcType=VARCHAR},
      </if>
      <if test="record.insuredpersongivenname != null">
        InsuredPersonGivenName = #{record.insuredpersongivenname,jdbcType=VARCHAR},
      </if>
      <if test="record.insuredpersonfamilynamek != null">
        InsuredPersonFamilyNameK = #{record.insuredpersonfamilynamek,jdbcType=VARCHAR},
      </if>
      <if test="record.insuredpersongivennamek != null">
        InsuredPersonGivenNameK = #{record.insuredpersongivennamek,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        Sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.phonenumber != null">
        PhoneNumber = #{record.phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        Email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        Birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.age != null">
        Age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.addresspostcode != null">
        AddressPostCode = #{record.addresspostcode,jdbcType=CHAR},
      </if>
      <if test="record.addressprefecture != null">
        AddressPrefecture = #{record.addressprefecture,jdbcType=VARCHAR},
      </if>
      <if test="record.addressmunicipalities != null">
        AddressMunicipalities = #{record.addressmunicipalities,jdbcType=VARCHAR},
      </if>
      <if test="record.addressother != null">
        AddressOther = #{record.addressother,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null">
        Remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeid != null">
        EmployeeId = #{record.employeeid,jdbcType=CHAR},
      </if>
      <if test="record.teamemployeeid != null">
        TeamEmployeeId = #{record.teamemployeeid,jdbcType=CHAR},
      </if>
      <if test="record.initialcommission != null">
        InitialCommission = #{record.initialcommission,jdbcType=INTEGER},
      </if>
      <if test="record.paymentmethod != null">
        PaymentMethod = #{record.paymentmethod,jdbcType=INTEGER},
      </if>
      <if test="record.paymentmonths != null">
        PaymentMonths = #{record.paymentmonths,jdbcType=INTEGER},
      </if>
      <if test="record.totalamount != null">
        TotalAmount = #{record.totalamount,jdbcType=INTEGER},
      </if>
      <if test="record.paymentpercentage != null">
        PaymentPercentage = #{record.paymentpercentage,jdbcType=REAL},
      </if>
      <if test="record.deleteflag != null">
        DeleteFlag = #{record.deleteflag,jdbcType=INTEGER},
      </if>
      <if test="record.createdby != null">
        CreatedBy = #{record.createdby,jdbcType=CHAR},
      </if>
      <if test="record.createddate != null">
        CreatedDate = #{record.createddate,jdbcType=DATE},
      </if>
      <if test="record.updatedby != null">
        UpdatedBy = #{record.updatedby,jdbcType=CHAR},
      </if>
      <if test="record.updateddate != null">
        UpdatedDate = #{record.updateddate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update T_InsuranceContractInfo
    set InsuranceContractId = #{record.insurancecontractid,jdbcType=INTEGER},
      InsuranceCompanyId = #{record.insurancecompanyid,jdbcType=CHAR},
      InsuranceProductId = #{record.insuranceproductid,jdbcType=INTEGER},
      InsurancePapersNo = #{record.insurancepapersno,jdbcType=VARCHAR},
      ContractorFamilyName = #{record.contractorfamilyname,jdbcType=VARCHAR},
      ContractorGivenName = #{record.contractorgivenname,jdbcType=VARCHAR},
      ContractorFamilyNameK = #{record.contractorfamilynamek,jdbcType=VARCHAR},
      ContractorGivenNameK = #{record.contractorgivennamek,jdbcType=VARCHAR},
      ContractDate = #{record.contractdate,jdbcType=DATE},
      InsuranceStartDate = #{record.insurancestartdate,jdbcType=DATE},
      IsCanceled = #{record.iscanceled,jdbcType=INTEGER},
      CancellationDate = #{record.cancellationdate,jdbcType=DATE},
      InsuranceAmount = #{record.insuranceamount,jdbcType=INTEGER},
      PaymentCycle = #{record.paymentcycle,jdbcType=INTEGER},
      Relationship = #{record.relationship,jdbcType=INTEGER},
      RelationshipOther = #{record.relationshipother,jdbcType=VARCHAR},
      InsuredPersonFamilyName = #{record.insuredpersonfamilyname,jdbcType=VARCHAR},
      InsuredPersonGivenName = #{record.insuredpersongivenname,jdbcType=VARCHAR},
      InsuredPersonFamilyNameK = #{record.insuredpersonfamilynamek,jdbcType=VARCHAR},
      InsuredPersonGivenNameK = #{record.insuredpersongivennamek,jdbcType=VARCHAR},
      Sex = #{record.sex,jdbcType=INTEGER},
      PhoneNumber = #{record.phonenumber,jdbcType=VARCHAR},
      Email = #{record.email,jdbcType=VARCHAR},
      Birthday = #{record.birthday,jdbcType=DATE},
      Age = #{record.age,jdbcType=INTEGER},
      AddressPostCode = #{record.addresspostcode,jdbcType=CHAR},
      AddressPrefecture = #{record.addressprefecture,jdbcType=VARCHAR},
      AddressMunicipalities = #{record.addressmunicipalities,jdbcType=VARCHAR},
      AddressOther = #{record.addressother,jdbcType=VARCHAR},
      Remarks = #{record.remarks,jdbcType=VARCHAR},
      EmployeeId = #{record.employeeid,jdbcType=CHAR},
      TeamEmployeeId = #{record.teamemployeeid,jdbcType=CHAR},
      InitialCommission = #{record.initialcommission,jdbcType=INTEGER},
      PaymentMethod = #{record.paymentmethod,jdbcType=INTEGER},
      PaymentMonths = #{record.paymentmonths,jdbcType=INTEGER},
      TotalAmount = #{record.totalamount,jdbcType=INTEGER},
      PaymentPercentage = #{record.paymentpercentage,jdbcType=REAL},
      DeleteFlag = #{record.deleteflag,jdbcType=INTEGER},
      CreatedBy = #{record.createdby,jdbcType=CHAR},
      CreatedDate = #{record.createddate,jdbcType=DATE},
      UpdatedBy = #{record.updatedby,jdbcType=CHAR},
      UpdatedDate = #{record.updateddate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>
